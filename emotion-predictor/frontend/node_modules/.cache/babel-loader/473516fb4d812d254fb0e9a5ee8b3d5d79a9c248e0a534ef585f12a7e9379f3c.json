{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biography\\\\ArtEmotionalPalette-AI\\\\emotion-predictor\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [colors, setColors] = useState([]);\n  const [error, setError] = useState(null);\n  const [filePreview, setFilePreview] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      setError(\"Please select a file\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:8000/predict\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setPrediction(response.data.predicted_emotion);\n      setColors(response.data.colors);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setError(\"An error occurred while predicting. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Emotion Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict Emotion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Predicted Emotion: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Primary Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colors\",\n        children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-box\",\n            style: {\n              backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rO0YCL+nXdrOP5Iu/TqZ+RIrMVs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","prediction","setPrediction","colors","setColors","error","setError","filePreview","setFilePreview","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","predicted_emotion","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","map","color","index","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Biography/ArtEmotionalPalette-AI/emotion-predictor/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [colors, setColors] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [filePreview, setFilePreview] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!file) {\r\n      setError(\"Please select a file\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/predict\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      setPrediction(response.data.predicted_emotion);\r\n      setColors(response.data.colors);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setError(\"An error occurred while predicting. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Image Emotion Predictor</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Predict Emotion</button>\r\n      </form>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {prediction && (\r\n        <div className=\"results\">\r\n          <h2>Predicted Emotion: {prediction}</h2>\r\n          <h3>Primary Colors:</h3>\r\n          <div className=\"colors\">\r\n            {colors.map((color, index) => (\r\n              <div key={index}>\r\n                <div\r\n                  className=\"color-box\"\r\n                  style={{\r\n                    backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}