{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biography\\\\ArtEmotionalPalette-AI\\\\emotion-predictor\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [error, setError] = useState(null);\n  const [filePreview, setFilePreview] = useState(null);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFilePreview(reader.result);\n      };\n      reader.readAsDataURL(selectedFile);\n    } else {\n      setFilePreview(null);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      setError(\"Please select a file\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:8000/predict\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setPredictions(response.data.predicted_emotions);\n      setColors(response.data.colors);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setError(\"An error occurred while predicting. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Emotion Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict Emotion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), filePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Image Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: filePreview,\n        alt: \"Preview\",\n        className: \"preview-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Predicted Emotion: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Primary Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colors\",\n        children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-box\",\n            style: {\n              backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FcVQtKhuIeKpsFdP9CQDrhd8GJE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","predictions","setPredictions","colors","setColors","error","setError","filePreview","setFilePreview","handleFileChange","event","selectedFile","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","predicted_emotions","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","src","alt","prediction","map","color","index","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Biography/ArtEmotionalPalette-AI/emotion-predictor/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [predictions, setPredictions] = useState([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [filePreview, setFilePreview] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    setFile(selectedFile);\r\n\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setFilePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(selectedFile);\r\n    } else {\r\n      setFilePreview(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!file) {\r\n      setError(\"Please select a file\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/predict\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      setPredictions(response.data.predicted_emotions);\r\n      setColors(response.data.colors);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setError(\"An error occurred while predicting. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Image Emotion Predictor</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Predict Emotion</button>\r\n      </form>\r\n      {filePreview && (\r\n        <div className=\"image-preview\">\r\n          <p>Image Preview:</p>\r\n          <img src={filePreview} alt=\"Preview\" className=\"preview-image\" />\r\n        </div>\r\n      )}\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {prediction && (\r\n        <div className=\"results\">\r\n          <h2>Predicted Emotion: {prediction}</h2>\r\n          <h3>Primary Colors:</h3>\r\n          <div className=\"colors\">\r\n            {colors.map((color, index) => (\r\n              <div key={index}>\r\n                <div\r\n                  className=\"color-box\"\r\n                  style={{\r\n                    backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}